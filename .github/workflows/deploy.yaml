name: Django CI/CD

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Replace with your Python version

    # - name: Install dependencies
    #   run: |
    #     sudo apt install python3.12-venv
    #     python -m venv env
    #     . env/bin/activate
    #     pip install -r vaccine_site/requirements.txt

    - name: SSH Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script:
          cd /home/ubuntu/vaccine-scheduling-application
          git pull

          echo "DEBUG=$DEBUG" >> vaccine_site/.env
          echo "SECRET_KEY=$SECRET_KEY" >> vaccine_site/.env
          echo "EMAIL_HOST_USER=$EMAIL_HOST_USER" >> vaccine_site/.env
          echo "EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD" >> vaccine_site/.env
          echo "DB_NAME=$DB_NAME" >> vaccine_site/.env
          echo "DB_USER=$DB_USER" >> vaccine_site/.env
          echo "DB_HOST=$DB_HOST" >> vaccine_site/.env
          echo "DB_PORT=$DB_PORT" >> vaccine_site/.env
          echo "DB_PASSWORD=$DB_PASSWORD" >> vaccine_site/.env
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> vaccine_site/.env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> vaccine_site/.env
          echo "AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME" >> vaccine_site/.env

          sudo apt install -y python3.12-venv
          python3 -m venv venv
          source venv/bin/activate
          pip install -r vaccine_site/requirements.txt
          pip install gunicorn
          
          sudo cp deploy_config/gunicorn.service /etc/systemd/system/gunicorn.service
          sudo cp deploy_config/gunicorn.socket /etc/systemd/system/gunicorn.socket
          sudo systemctl daemon-reload
          sudo systemctl enable gunicorn.socket
          sudo systemctl start gunicorn.socket

          sudo apt install -y nginx
          sudo rm /etc/nginx/sites-available/default
          sudo rm /etc/nginx/sites-enabled/default
          sudo cp deploy_config/nginx.conf /etc/nginx/sites-available/django
          sudo ln -sf /etc/nginx/sites-available/your_project_name /etc/nginx/sites-enabled
          sudo nginx -t
          sudo systemctl restart nginx

          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo systemctl restart gunicorn